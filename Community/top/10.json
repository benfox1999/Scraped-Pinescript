{"created":"2021-08-05T09:35:26.848799Z","extra":{"kind":"study","sourceInputsCount":0},"lastVersionMaj":"1.0","scriptAccess":"open_no_auth","scriptName":"TMA Overlay","source":"//@version=4\r\nstudy(title=\"TMA Overlay\", shorttitle=\"TMA Overlay\", overlay=true)\r\n\r\n// ### Four Smoothed Moving Averages\r\n\r\nlen1 = 21\r\n//input(21, minval=1, title=\"Length 1\", group = \"Smoothed MA Inputs\")\r\nsrc1 = close\r\n//input(close, title=\"Source 1\", group = \"Smoothed MA Inputs\")\r\nsmma1 = 0.0\r\nsma_1 = sma(src1, len1)\r\nsmma1 := na(smma1[1]) ? sma_1 : (smma1[1] * (len1 - 1) + src1) / len1\r\nplot(smma1, color=color.white, linewidth=2, title=\"21 SMMA\")\r\n\r\nlen2 = 50\r\n//input(50, minval=1, title=\"Length 2\", group = \"Smoothed MA Inputs\")\r\nsrc2 = close\r\n//input(close, title=\"Source 2\", group = \"Smoothed MA Inputs\")\r\nsmma2 = 0.0\r\nsma_2 = sma(src2, len2)\r\nsmma2 := na(smma2[1]) ? sma_2 : (smma2[1] * (len2 - 1) + src2) / len2\r\nplot(smma2, color=color.new(#6aff00,0), linewidth=2, title=\"50 SMMA\")\r\n\r\nh100 = input(title=\"Show 100 Line\", type=input.bool, defval=true, group = \"Smoothed MA Inputs\")\r\nlen3 = 100\r\n//input(100, minval=1, title=\"Length 3\", group = \"Smoothed MA Inputs\")\r\nsrc3 = close\r\n//input(close, title=\"Source 3\", group = \"Smoothed MA Inputs\")\r\nsmma3 = 0.0\r\nsma_3 = sma(src3, len3)\r\nsmma3 := na(smma3[1]) ? sma_3 : (smma3[1] * (len3 - 1) + src3) / len3\r\nsma3plot = plot(h100 ? smma3 : na, color=color.new(color.yellow,0), linewidth=2, title=\"100 SMMA\")\r\n\r\nlen4 = 200\r\n//input(200, minval=1, title=\"Length 4\", group = \"Smoothed MA Inputs\")\r\nsrc4 = close\r\n//input(close, title=\"Source 4\", group = \"Smoothed MA Inputs\")\r\nsmma4 = 0.0\r\nsma_4 = sma(src4, len4)\r\nsmma4 := na(smma4[1]) ? sma_4 : (smma4[1] * (len4 - 1) + src4) / len4\r\nsma4plot = plot(smma4, color=color.new(#ff0500,0), linewidth=2, title=\"200 SMMA\")\r\n\r\n// Trend Fill\r\n\r\ntrendFill = input(title=\"Show Trend Fill\", type=input.bool, defval=true, group = \"Smoothed MA Inputs\") \r\nema2 = ema(close, 2)\r\nema2plot = plot(ema2, color=#2ecc71, transp=100, style=plot.style_line, linewidth=1, title=\"EMA(2)\", editable = false)\r\n\r\nfill(ema2plot, sma4plot, color=ema2 > smma4 and trendFill ? color.green : ema2 < smma4 and trendFill ? color.red : na, transp=85, title = \"Trend Fill\")\r\n\r\n// End ###\r\n\r\n// ### 3 Line Strike\r\n\r\nbearS = input(title=\"Show Bearish 3 Line Strike\", type=input.bool, defval=true, group = \"3 Line Strike\")\r\nbullS = input(title=\"Show Bullish 3 Line Strike\", type=input.bool, defval=true, group = \"3 Line Strike\")\r\n\r\nbearSig = close[3] > open[3] and close[2] > open[2] and close[1] > open[1] and close < open[1]\r\nbullSig = close[3] < open[3] and close[2] < open[2] and close[1] < open[1] and close > open[1]\r\n\r\nplotshape(bullS ? bullSig : na, style=shape.triangleup, color=color.green, location=location.belowbar, size = size.small,  text=\"3s-Bull\", title=\"3 Line Strike Up\")\r\nplotshape(bearS ? bearSig : na, style=shape.triangledown, color=color.red, location=location.abovebar, size = size.small,  text=\"3s-Bear\", title=\"3 Line Strike Down\")\r\n\r\n// End ###\r\n\r\n//### Engulfing Candles\r\n\r\nbearE = input(title=\"Show Bearish Big A$$ Candles\", type=input.bool, defval=true, group = \"Big A$$ Candles\")\r\nbullE = input(title=\"Show Bullish Big A$$ Candles\", type=input.bool, defval=true, group = \"Big A$$ Candles\")\r\n\r\nopenBarPrevious = open[1]\r\ncloseBarPrevious = close[1]\r\nopenBarCurrent = open\r\ncloseBarCurrent = close\r\n\r\n//If current bar open is less than equal to the previous bar close AND current bar open is less than previous bar open AND current bar close is greater than previous bar open THEN True\r\nbullishEngulfing = openBarCurrent <= closeBarPrevious and openBarCurrent < openBarPrevious and \r\n   closeBarCurrent > openBarPrevious\r\n//If current bar open is greater than equal to previous bar close AND current bar open is greater than previous bar open AND current bar close is less than previous bar open THEN True\r\nbearishEngulfing = openBarCurrent >= closeBarPrevious and openBarCurrent > openBarPrevious and \r\n   closeBarCurrent < openBarPrevious\r\n\r\n//bullishEngulfing/bearishEngulfing return a value of 1 or 0; if 1 then plot on chart, if 0 then don't plot\r\nplotshape(bullE ? bullishEngulfing : na, style=shape.triangleup, location=location.belowbar, color=color.green, size=size.tiny, title=\"Big Ass Candle Up\" )\r\nplotshape(bearE ? bearishEngulfing : na, style=shape.triangledown, location=location.abovebar, color=color.red, size=size.tiny, title=\"Big Ass Candle Down\")\r\n\r\nalertcondition(bullishEngulfing, title=\"Bullish Engulfing\", message=\"[CurrencyPair] [TimeFrame], Bullish candle engulfing previous candle\")\r\nalertcondition(bearishEngulfing, title=\"Bearish Engulfing\", message=\"[CurrencyPair] [TimeFrame], Bearish candle engulfing previous candle\")\r\n\r\n// End ###\r\n\r\n// ### Trading Session\r\n\r\nts = input(title=\"Show Trade Session\", type=input.bool, defval=true, group = \"Trade Session\")\r\n\r\ntz = input(title=\"Timezone\", type=input.string, defval=\"America/Chicago\", options=[\"Asia/Sydney\", \"Asia/Tokyo\", \"Europe/Frankfurt\", \"Europe/London\", \"UTC\", \"America/New_York\", \"America/Chicago\"], group = \"Trade Session\")\r\nlabel = input(title=\"Label\", type=input.string, defval=\"CME Open\", tooltip=\"For easy identification\", group = \"Trade Session\")\r\n\r\nstartHour = input(title=\"analysis Start hour\", type=input.integer, defval=7, minval=0, maxval=23, group = \"Trade Session\")\r\nstartMinute = input(title=\"analysis Start minute\", type=input.integer, defval=00, minval=0, maxval=59, group = \"Trade Session\")\r\n\r\nstartHour2 = input(title=\"Session Start hour\", type=input.integer, defval=8, minval=0, maxval=23, group = \"Trade Session\")\r\nstartMinute2 = input(title=\"Session Start minute\", type=input.integer, defval=30, minval=0, maxval=59, group = \"Trade Session\")\r\nendHour2 = input(title=\"Session End hour\", type=input.integer, defval=12, minval=0, maxval=23, group = \"Trade Session\")\r\nendMinute2 = input(title=\"Session End minute\", type=input.integer, defval=0, minval=0, maxval=59, group = \"Trade Session\")\r\n\r\nrangeColor = input(title=\"Color\", type=input.color, defval=#1976d21f, group = \"Trade Session\")\r\nshowMon = input(title=\"Monday\", type=input.bool, defval=true, group = \"Trade Session\")\r\nshowTue = input(title=\"Tuesday\", type=input.bool, defval=true, group = \"Trade Session\")\r\nshowWed = input(title=\"Wednesday\", type=input.bool, defval=true, group = \"Trade Session\")\r\nshowThu = input(title=\"Thursday\", type=input.bool, defval=true, group = \"Trade Session\")\r\nshowFri = input(title=\"Friday\", type=input.bool, defval=true, group = \"Trade Session\")\r\nshowSat = input(title=\"Saturday\", type=input.bool, defval=false, group = \"Trade Session\")\r\nshowSun = input(title=\"Sunday\", type=input.bool, defval=false, group = \"Trade Session\")\r\n\r\ntzYear = year(time, tz)\r\ntzMonth = month(time, tz)\r\ntzDay = dayofmonth(time, tz)\r\ntzDayOfWeek = dayofweek(time, tz)\r\nstartTime = timestamp(tz, tzYear, tzMonth, tzDay, startHour, startMinute)\r\nendTime = timestamp(tz, tzYear, tzMonth, tzDay, endHour2, endMinute2)\r\n\r\nactive = if startTime <= time and time <= endTime and ts\r\n    if tzDayOfWeek == dayofweek.monday and showMon\r\n        true\r\n    else if tzDayOfWeek == dayofweek.tuesday and showTue\r\n        true\r\n    else if tzDayOfWeek == dayofweek.wednesday and showWed\r\n        true\r\n    else if tzDayOfWeek == dayofweek.thursday and showThu\r\n        true\r\n    else if tzDayOfWeek == dayofweek.friday and showFri\r\n        true\r\n    else if tzDayOfWeek == dayofweek.saturday and showSat\r\n        true\r\n    else if tzDayOfWeek == dayofweek.sunday and showSun\r\n        true\r\n    else\r\n        false\r\nelse\r\n    false\r\n\r\nbgcolor(color=active ? rangeColor : na, title = \"Session Background\")\r\n\r\n\r\nstartTime2 = timestamp(tz, tzYear, tzMonth, tzDay, startHour2, startMinute2)\r\nendTime2 = timestamp(tz, tzYear, tzMonth, tzDay, endHour2, endMinute2)\r\n\r\nactive2 = if startTime2 <= time and time <= endTime2 and ts\r\n    if tzDayOfWeek == dayofweek.monday and showMon\r\n        true\r\n    else if tzDayOfWeek == dayofweek.tuesday and showTue\r\n        true\r\n    else if tzDayOfWeek == dayofweek.wednesday and showWed\r\n        true\r\n    else if tzDayOfWeek == dayofweek.thursday and showThu\r\n        true\r\n    else if tzDayOfWeek == dayofweek.friday and showFri\r\n        true\r\n    else if tzDayOfWeek == dayofweek.saturday and showSat\r\n        true\r\n    else if tzDayOfWeek == dayofweek.sunday and showSun\r\n        true\r\n    else\r\n        false\r\nelse\r\n    false\r\n    \r\nbgcolor(color=active2 ? rangeColor : na, title = \"Session Background\")\r\n\r\n// End ###\r\n\r\n// eof\r\n","updated":"2021-08-05T09:35:26.848799Z","version":"1.0"}