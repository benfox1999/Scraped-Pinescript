{"created":"2021-06-09T10:06:27.759215Z","extra":{"kind":"strategy","sourceInputsCount":1},"lastVersionMaj":"2.0","scriptAccess":"open_no_auth","scriptName":"PMax Explorer","source":"// This source code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/\r\n// Â© KivancOzbilgic\r\n//developer: KivancOzbilgic\r\n//author: KivancOzbilgic\r\n//@version=4\r\nstrategy(\"PMax Explorer\", shorttitle=\"PMEx\", overlay=true)\r\nsrc = input(hl2, title=\"Source\")\r\nPeriods = input(title=\"ATR Length\", type=input.integer, defval=10)\r\nMultiplier = input(title=\"ATR Multiplier\", type=input.float, step=0.1, defval=3.0)\r\nmav = input(title=\"Moving Average Type\", defval=\"EMA\", options=[\"SMA\", \"EMA\", \"WMA\", \"TMA\", \"VAR\", \"WWMA\", \"ZLEMA\", \"TSF\"])\r\nlength =input(10, \"Moving Average Length\", minval=1)\r\nchangeATR= input(title=\"Change ATR Calculation Method ?\", type=input.bool, defval=true)\r\nshowsupport = input(title=\"Show Moving Average?\", type=input.bool, defval=true)\r\nshowsignalsk = input(title=\"Show Crossing Signals?\", type=input.bool, defval=true)\r\nshowsignalsc = input(title=\"Show Price/Pmax Crossing Signals?\", type=input.bool, defval=false)\r\nhighlighting = input(title=\"Highlighter On/Off ?\", type=input.bool, defval=true)\r\natr2 = sma(tr, Periods)\r\natr= changeATR ? atr(Periods) : atr2\r\nVar_Func(src,length)=>\r\n    valpha=2/(length+1)\r\n    vud1=src>src[1] ? src-src[1] : 0\r\n    vdd1=src<src[1] ? src[1]-src : 0\r\n    vUD=sum(vud1,9)\r\n    vDD=sum(vdd1,9)\r\n    vCMO=nz((vUD-vDD)/(vUD+vDD))\r\n    VAR=0.0\r\n    VAR:=nz(valpha*abs(vCMO)*src)+(1-valpha*abs(vCMO))*nz(VAR[1])\r\nVAR=Var_Func(src,length)\r\nWwma_Func(src,length)=>\r\n    wwalpha = 1/ length\r\n    WWMA = 0.0\r\n    WWMA := wwalpha*src + (1-wwalpha)*nz(WWMA[1])\r\nWWMA=Wwma_Func(src,length)\r\nZlema_Func(src,length)=>\r\n    zxLag = length/2==round(length/2) ? length/2 : (length - 1) / 2\r\n    zxEMAData = (src + (src - src[zxLag]))\r\n    ZLEMA = ema(zxEMAData, length)\r\nZLEMA=Zlema_Func(src,length)\r\nTsf_Func(src,length)=>\r\n    lrc = linreg(src, length, 0)\r\n    lrc1 = linreg(src,length,1)\r\n    lrs = (lrc-lrc1)\r\n    TSF = linreg(src, length, 0)+lrs\r\nTSF=Tsf_Func(src,length)\r\ngetMA(src, length) =>\r\n    ma = 0.0\r\n    if mav == \"SMA\"\r\n        ma := sma(src, length)\r\n        ma\r\n\r\n    if mav == \"EMA\"\r\n        ma := ema(src, length)\r\n        ma\r\n\r\n    if mav == \"WMA\"\r\n        ma := wma(src, length)\r\n        ma\r\n\r\n    if mav == \"TMA\"\r\n        ma := sma(sma(src, ceil(length / 2)), floor(length / 2) + 1)\r\n        ma\r\n\r\n    if mav == \"VAR\"\r\n        ma := VAR\r\n        ma\r\n\r\n    if mav == \"WWMA\"\r\n        ma := WWMA\r\n        ma\r\n\r\n    if mav == \"ZLEMA\"\r\n        ma := ZLEMA\r\n        ma\r\n\r\n    if mav == \"TSF\"\r\n        ma := TSF\r\n        ma\r\n    ma\r\n    \r\nMAvg=getMA(src, length)\r\nPmax_Func(src,length)=>\r\n    longStop = MAvg - Multiplier*atr\r\n    longStopPrev = nz(longStop[1], longStop)\r\n    longStop := MAvg > longStopPrev ? max(longStop, longStopPrev) : longStop\r\n    shortStop = MAvg + Multiplier*atr\r\n    shortStopPrev = nz(shortStop[1], shortStop)\r\n    shortStop := MAvg < shortStopPrev ? min(shortStop, shortStopPrev) : shortStop\r\n    dir = 1\r\n    dir := nz(dir[1], dir)\r\n    dir := dir == -1 and MAvg > shortStopPrev ? 1 : dir == 1 and MAvg < longStopPrev ? -1 : dir\r\n    PMax = dir==1 ? longStop: shortStop\r\nPMax=Pmax_Func(src,length)\r\nplot(showsupport ? MAvg : na, color=#0585E1, linewidth=2, title=\"Moving Avg Line\")\r\npALL=plot(PMax, color=color.red, linewidth=2, title=\"PMax\", transp=0)\r\nalertcondition(cross(MAvg, PMax), title=\"Cross Alert\", message=\"PMax - Moving Avg Crossing!\")\r\nalertcondition(crossover(MAvg, PMax), title=\"Crossover Alarm\", message=\"Moving Avg BUY SIGNAL!\")\r\nalertcondition(crossunder(MAvg, PMax), title=\"Crossunder Alarm\", message=\"Moving Avg SELL SIGNAL!\")\r\nalertcondition(cross(src, PMax), title=\"Price Cross Alert\", message=\"PMax - Price Crossing!\")\r\nalertcondition(crossover(src, PMax), title=\"Price Crossover Alarm\", message=\"PRICE OVER PMax - BUY SIGNAL!\")\r\nalertcondition(crossunder(src, PMax), title=\"Price Crossunder Alarm\", message=\"PRICE UNDER PMax - SELL SIGNAL!\")\r\nbuySignalk = crossover(MAvg, PMax)\r\nplotshape(buySignalk and showsignalsk ? PMax*0.995 : na, title=\"Buy\", text=\"Buy\", location=location.absolute, style=shape.labelup, size=size.tiny, color=color.green, textcolor=color.white, transp=0)\r\nsellSignallk = crossunder(MAvg, PMax)\r\nplotshape(sellSignallk and showsignalsk ? PMax*1.005 : na, title=\"Sell\", text=\"Sell\", location=location.absolute, style=shape.labeldown, size=size.tiny, color=color.red, textcolor=color.white, transp=0)\r\nbuySignalc = crossover(src, PMax)\r\nplotshape(buySignalc and showsignalsc ? PMax*0.995 : na, title=\"Buy\", text=\"Buy\", location=location.absolute, style=shape.labelup, size=size.tiny, color=#0F18BF, textcolor=color.white, transp=0)\r\nsellSignallc = crossunder(src, PMax)\r\nplotshape(sellSignallc and showsignalsc ? PMax*1.005 : na, title=\"Sell\", text=\"Sell\", location=location.absolute, style=shape.labeldown, size=size.tiny, color=#0F18BF, textcolor=color.white, transp=0)\r\nmPlot = plot(ohlc4, title=\"\", style=plot.style_circles, linewidth=0,display=display.none)\r\nlongFillColor = highlighting ? (MAvg>PMax ? color.green : na) : na\r\nshortFillColor = highlighting ? (MAvg<PMax ? color.red : na) : na\r\nfill(mPlot, pALL, title=\"UpTrend Highligter\", color=longFillColor)\r\nfill(mPlot, pALL, title=\"DownTrend Highligter\", color=shortFillColor)\r\nshowscr = input(true, title=\"Show Screener Label\")\r\nposX_scr = input(20, title=\"Pos. Label x-axis\")\r\nposY_scr = input(1, title=\"Pos. Size Label y-axis\")\r\ncolinput = input(title=\"Label Color\", defval=\"Blue\", options=[\"White\", \"Black\", \"Red\", \"Green\", \"Yellow\", \"Blue\"])\r\ncol = color.gray\r\nif colinput==\"White\"\r\n    col:=color.white\r\nif colinput==\"Black\"\r\n    col:=color.black\r\nif colinput==\"Red\"\r\n    col:=color.red\r\nif colinput==\"Green\"\r\n    col:=color.green\r\nif colinput==\"Yellow\"\r\n    col:=color.yellow\r\nif colinput==\"Blue\"\r\n    col:=color.blue\r\ndummy0 = input(true, title = \"=Backtest Inputs=\")\r\nFromDay    = input(defval = 1, title = \"From Day\", minval = 1, maxval = 31)\r\nFromMonth  = input(defval = 1, title = \"From Month\", minval = 1, maxval = 12)\r\nFromYear   = input(defval = 2005, title = \"From Year\", minval = 2005)\r\nToDay      = input(defval = 1, title = \"To Day\", minval = 1, maxval = 31)\r\nToMonth    = input(defval = 1, title = \"To Month\", minval = 1, maxval = 12)\r\nToYear     = input(defval = 9999, title = \"To Year\", minval = 2006)\r\nStart     = timestamp(FromYear, FromMonth, FromDay, 00, 00)\r\nFinish    = timestamp(ToYear, ToMonth, ToDay, 23, 59)\r\nTimerange() =>\r\n    time >= Start and time <= Finish ? true : false\r\nif buySignalk\r\n    strategy.entry(\"Long\", strategy.long,when=Timerange())\r\nif sellSignallk\r\n    strategy.entry(\"Short\", strategy.short,when=Timerange())\r\nt1=input('EURUSD',   title='Symbol 01',type=input.symbol)\r\nt2=input('XAUUSD',    title='Symbol 02',type=input.symbol)\r\nt3=input('AMZN',    title='Symbol 03',type=input.symbol)\r\nt4=input('TSLA',    title='Symbol 04',type=input.symbol)\r\nt5=input('BTCUSDT',    title='Symbol 05',type=input.symbol)\r\nt6=input('ETHBTC',    title='Symbol 06',type=input.symbol)\r\nt7=input('XBTUSD',    title='Symbol 07',type=input.symbol)\r\nt8=input('XRPBTC',    title='Symbol 08',type=input.symbol)\r\nt9=input('THYAO',   title='Symbol 09',type=input.symbol)\r\nt10=input('GARAN',    title='Symbol 10',type=input.symbol)\r\nt11=input('USDTRY',      title='Symbol 11',type=input.symbol)\r\nt12=input('PETKM',      title='Symbol 12',type=input.symbol)\r\nt13=input('AAPL',      title='Symbol 13',type=input.symbol)\r\nt14=input('TUPRS',      title='Symbol 14',type=input.symbol)\r\nt15=input('HALKB',      title='Symbol 15',type=input.symbol)\r\nt16=input('AVAXUSDT',     title='Symbol 16',type=input.symbol)\r\nt17=input('ETHUSDT',    title='Symbol 17',type=input.symbol)\r\nt18=input('UKOIL',    title='Symbol 18',type=input.symbol)\r\nt19=input('ABNB',    title='Symbol 19',type=input.symbol)\r\nt20=input('SISE',    title='Symbol 20',type=input.symbol)\r\nPmax(Multiplier, Periods) =>\r\n    Up=MAvg-(Multiplier*atr)\r\n    Dn=MAvg+(Multiplier*atr)\r\n    \r\n    TrendUp = 0.0\r\n    TrendUp := MAvg[1]>TrendUp[1] ? max(Up,TrendUp[1]) : Up\r\n    TrendDown = 0.0\r\n    TrendDown := MAvg[1]<TrendDown[1]? min(Dn,TrendDown[1]) : Dn\r\n    Trend = 0.0\r\n    Trend := MAvg > TrendDown[1] ? 1: MAvg< TrendUp[1]? -1: nz(Trend[1],1)\r\n    Tsl = Trend==1? TrendUp: TrendDown\r\n    \r\n    S_Buy = Trend == 1 ? 1 : 0\r\n    S_Sell = Trend != 1 ? 1 : 0\r\n    \r\n    [Trend, Tsl]\r\n[Trend, Tsl] =  Pmax(Multiplier, Periods)\r\nTrendReversal = Trend != Trend[1]\r\n[t01, s01] = security(t1, timeframe.period, Pmax(Multiplier, Periods))\r\n[t02, s02] = security(t2, timeframe.period, Pmax(Multiplier, Periods))\r\n[t03, s03] = security(t3, timeframe.period, Pmax(Multiplier, Periods))\r\n[t04, s04] = security(t4, timeframe.period, Pmax(Multiplier, Periods))\r\n[t05, s05] = security(t5, timeframe.period, Pmax(Multiplier, Periods))\r\n[t06, s06] = security(t6, timeframe.period, Pmax(Multiplier, Periods))\r\n[t07, s07] = security(t7, timeframe.period, Pmax(Multiplier, Periods))\r\n[t08, s08] = security(t8, timeframe.period, Pmax(Multiplier, Periods))\r\n[t09, s09] = security(t9, timeframe.period, Pmax(Multiplier, Periods))\r\n[t010, s010] = security(t10, timeframe.period, Pmax(Multiplier, Periods))\r\n[t011, s011] = security(t11, timeframe.period, Pmax(Multiplier, Periods))\r\n[t012, s012] = security(t12, timeframe.period, Pmax(Multiplier, Periods))\r\n[t013, s013] = security(t13, timeframe.period, Pmax(Multiplier, Periods))\r\n[t014, s014] = security(t14, timeframe.period, Pmax(Multiplier, Periods))\r\n[t015, s015] = security(t15, timeframe.period, Pmax(Multiplier, Periods))\r\n[t016, s016] = security(t16, timeframe.period, Pmax(Multiplier, Periods))\r\n[t017, s017] = security(t17, timeframe.period, Pmax(Multiplier, Periods))\r\n[t018, s018] = security(t18, timeframe.period, Pmax(Multiplier, Periods))\r\n[t019, s019] = security(t19, timeframe.period, Pmax(Multiplier, Periods))\r\n[t020, s020] = security(t20, timeframe.period, Pmax(Multiplier, Periods))\r\ntr01 = t01 != t01[1], up01 = t01 == 1, dn01 = t01 == -1\r\ntr02 = t02 != t02[1], up02 = t02 == 1, dn02 = t02 == -1\r\ntr03 = t03 != t03[1], up03 = t03 == 1, dn03 = t03 == -1\r\ntr04 = t04 != t04[1], up04 = t04 == 1, dn04 = t04 == -1\r\ntr05 = t05 != t05[1], up05 = t05 == 1, dn05 = t05 == -1\r\ntr06 = t06 != t06[1], up06 = t06 == 1, dn06 = t06 == -1\r\ntr07 = t07 != t07[1], up07 = t07 == 1, dn07 = t07 == -1\r\ntr08 = t08 != t08[1], up08 = t08 == 1, dn08 = t08 == -1\r\ntr09 = t09 != t09[1], up09 = t09 == 1, dn09 = t09 == -1\r\ntr010 = t010 != t010[1], up010 = t010 == 1, dn010 = t010 == -1\r\ntr011 = t011 != t011[1], up011 = t011 == 1, dn011 = t011 == -1\r\ntr012 = t012 != t012[1], up012 = t012 == 1, dn012 = t012 == -1\r\ntr013 = t013 != t013[1], up013 = t013 == 1, dn013 = t013 == -1\r\ntr014 = t014 != t014[1], up014 = t014 == 1, dn014 = t014 == -1\r\ntr015 = t015 != t015[1], up015 = t015 == 1, dn015 = t015 == -1\r\ntr016 = t016 != t016[1], up016 = t016 == 1, dn016 = t016 == -1\r\ntr017 = t017 != t017[1], up017 = t017 == 1, dn017 = t017 == -1\r\ntr018 = t018 != t018[1], up018 = t018 == 1, dn018 = t018 == -1\r\ntr019 = t019 != t019[1], up019 = t019 == 1, dn019 = t019 == -1\r\ntr020 = t020 != t020[1], up020 = t020 == 1, dn020 = t020 == -1\r\npot_label = 'Potential Reversal: \\n'\r\npot_label := tr01    ? pot_label + t1 + '\\n'  : pot_label\r\npot_label := tr02    ? pot_label + t2 + '\\n'  : pot_label\r\npot_label := tr03    ? pot_label + t3 + '\\n'  : pot_label\r\npot_label := tr04    ? pot_label + t4 + '\\n'  : pot_label\r\npot_label := tr05    ? pot_label + t5 + '\\n'  : pot_label\r\npot_label := tr06    ? pot_label + t6 + '\\n'  : pot_label\r\npot_label := tr07    ? pot_label + t7 + '\\n'  : pot_label\r\npot_label := tr08    ? pot_label + t8 + '\\n'  : pot_label\r\npot_label := tr09    ? pot_label + t9 + '\\n'  : pot_label\r\npot_label := tr010    ? pot_label + t10 + '\\n'  : pot_label\r\npot_label := tr011    ? pot_label + t11 + '\\n'  : pot_label\r\npot_label := tr012    ? pot_label + t12 + '\\n'  : pot_label\r\npot_label := tr013    ? pot_label + t13 + '\\n'  : pot_label\r\npot_label := tr014    ? pot_label + t14 + '\\n'  : pot_label\r\npot_label := tr015    ? pot_label + t15 + '\\n'  : pot_label\r\npot_label := tr016    ? pot_label + t16 + '\\n'  : pot_label\r\npot_label := tr017    ? pot_label + t17 + '\\n'  : pot_label\r\npot_label := tr018    ? pot_label + t18 + '\\n'  : pot_label\r\npot_label := tr019    ? pot_label + t19 + '\\n'  : pot_label\r\npot_label := tr020    ? pot_label + t20 + '\\n'  : pot_label\r\nscr_label = 'Confirmed Reversal: \\n'\r\nscr_label := tr01[1] ? scr_label + t1 + '\\n'  : scr_label\r\nscr_label := tr02[1] ? scr_label + t2 + '\\n'  : scr_label\r\nscr_label := tr03[1] ? scr_label + t3 + '\\n'  : scr_label\r\nscr_label := tr04[1] ? scr_label + t4 + '\\n'  : scr_label\r\nscr_label := tr05[1] ? scr_label + t5 + '\\n'  : scr_label\r\nscr_label := tr06[1] ? scr_label + t6 + '\\n'  : scr_label\r\nscr_label := tr07[1] ? scr_label + t7 + '\\n'  : scr_label\r\nscr_label := tr08[1] ? scr_label + t8 + '\\n'  : scr_label\r\nscr_label := tr09[1] ? scr_label + t9 + '\\n'  : scr_label\r\nscr_label := tr010[1] ? scr_label + t10 + '\\n'  : scr_label\r\nscr_label := tr011[1] ? scr_label + t11 + '\\n'  : scr_label\r\nscr_label := tr012[1] ? scr_label + t12 + '\\n'  : scr_label\r\nscr_label := tr013[1] ? scr_label + t13 + '\\n'  : scr_label\r\nscr_label := tr014[1] ? scr_label + t14 + '\\n'  : scr_label\r\nscr_label := tr015[1] ? scr_label + t15 + '\\n'  : scr_label\r\nscr_label := tr016[1] ? scr_label + t16 + '\\n'  : scr_label\r\nscr_label := tr017[1] ? scr_label + t17 + '\\n'  : scr_label\r\nscr_label := tr018[1] ? scr_label + t18 + '\\n'  : scr_label\r\nscr_label := tr019[1] ? scr_label + t19 + '\\n'  : scr_label\r\nscr_label := tr020[1] ? scr_label + t20 + '\\n'  : scr_label\r\nup_label = 'Uptrend: \\n'\r\nup_label := up01[1] ? up_label + t1 + '\\n'  : up_label\r\nup_label := up02[1] ? up_label + t2 + '\\n'  : up_label\r\nup_label := up03[1] ? up_label + t3 + '\\n'  : up_label\r\nup_label := up04[1] ? up_label + t4 + '\\n'  : up_label\r\nup_label := up05[1] ? up_label + t5 + '\\n'  : up_label\r\nup_label := up06[1] ? up_label + t6 + '\\n'  : up_label\r\nup_label := up07[1] ? up_label + t7 + '\\n'  : up_label\r\nup_label := up08[1] ? up_label + t8 + '\\n'  : up_label\r\nup_label := up09[1] ? up_label + t9 + '\\n'  : up_label\r\nup_label := up010[1] ? up_label + t10 + '\\n'  : up_label\r\nup_label := up011[1] ? up_label + t11 + '\\n'  : up_label\r\nup_label := up012[1] ? up_label + t12 + '\\n'  : up_label\r\nup_label := up013[1] ? up_label + t13 + '\\n'  : up_label\r\nup_label := up014[1] ? up_label + t14 + '\\n'  : up_label\r\nup_label := up015[1] ? up_label + t15 + '\\n'  : up_label\r\nup_label := up016[1] ? up_label + t16 + '\\n'  : up_label\r\nup_label := up017[1] ? up_label + t17 + '\\n'  : up_label\r\nup_label := up018[1] ? up_label + t18 + '\\n'  : up_label\r\nup_label := up019[1] ? up_label + t19 + '\\n'  : up_label\r\nup_label := up020[1] ? up_label + t20 + '\\n'  : up_label\r\ndn_label = 'Downtrend: \\n'\r\ndn_label := dn01[1] ? dn_label + t1 + '\\n'  : dn_label\r\ndn_label := dn02[1] ? dn_label + t2 + '\\n'  : dn_label\r\ndn_label := dn03[1] ? dn_label + t3 + '\\n'  : dn_label\r\ndn_label := dn04[1] ? dn_label + t4 + '\\n'  : dn_label\r\ndn_label := dn05[1] ? dn_label + t5 + '\\n'  : dn_label\r\ndn_label := dn06[1] ? dn_label + t6 + '\\n'  : dn_label\r\ndn_label := dn07[1] ? dn_label + t7 + '\\n'  : dn_label\r\ndn_label := dn08[1] ? dn_label + t8 + '\\n'  : dn_label\r\ndn_label := dn09[1] ? dn_label + t9 + '\\n'  : dn_label\r\ndn_label := dn010[1] ? dn_label + t10 + '\\n'  : dn_label\r\ndn_label := dn011[1] ? dn_label + t11 + '\\n'  : dn_label\r\ndn_label := dn012[1] ? dn_label + t12 + '\\n'  : dn_label\r\ndn_label := dn013[1] ? dn_label + t13 + '\\n'  : dn_label\r\ndn_label := dn014[1] ? dn_label + t14 + '\\n'  : dn_label\r\ndn_label := dn015[1] ? dn_label + t15 + '\\n'  : dn_label\r\ndn_label := dn016[1] ? dn_label + t16 + '\\n'  : dn_label\r\ndn_label := dn017[1] ? dn_label + t17 + '\\n'  : dn_label\r\ndn_label := dn018[1] ? dn_label + t18 + '\\n'  : dn_label\r\ndn_label := dn019[1] ? dn_label + t19 + '\\n'  : dn_label\r\ndn_label := dn020[1] ? dn_label + t20 + '\\n'  : dn_label\r\nf_colorscr (_valscr ) => \r\n     _valscr  ? #00000000 : na\r\n     \r\nf_printscr (_txtscr ) => \r\n     var _lblscr  = label(na), \r\n     label.delete(_lblscr ), \r\n     _lblscr  := label.new(\r\n     time + (time-time[1])*posX_scr , \r\n     ohlc4[posY_scr], \r\n     _txtscr ,\r\n     xloc.bar_time, \r\n     yloc.price, \r\n     f_colorscr (  showscr ),\r\n     textcolor =  showscr ? col : na, \r\n     size = size.normal, \r\n     style=label.style_label_center\r\n     )\r\nf_printscr ( scr_label + '\\n' + pot_label +'\\n' + up_label + '\\n' + dn_label)\r\n","updated":"2021-06-09T10:06:27.759215Z","version":"2.0"}