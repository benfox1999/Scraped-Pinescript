{"created":"2024-04-29T19:46:29.83369Z","extra":{"kind":"study","sourceInputsCount":0},"lastVersionMaj":"1.0","scriptAccess":"open_no_auth","scriptName":"Volume Bull/Bear Activity [ZC]","source":"// This Pine Script™ code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/\r\n// © TZack88\r\n\r\n//@version=5\r\nindicator(\"Volume Bull/Bear Activity [ZC]\",explicit_plot_zorder = true)\r\nstring SettingsG = \"Settings\"\r\nbool ChartTime   = time > chart.left_visible_bar_time and time <= chart.right_visible_bar_time\r\nstring TIME      = input.timeframe(\"1D\",title = \"TimeFrame\",group =SettingsG ,inline = \"!C\")\r\n// Boxes Colors\r\ncolor C1         = input.color(color.rgb(4, 163, 86, 30),title = \"Bars\",group =SettingsG ,inline = \"!C2\")\r\ncolor C2         = input.color(color.rgb(153, 8, 8, 30),title = \"\",group =SettingsG ,inline = \"!C2\")\r\n\r\n// Volume Text colors\r\ncolor TC1        = input.color(color.rgb(0, 230, 118),title = \"Text\",group =SettingsG ,inline = \"!C2\")\r\ncolor TC2        = input.color(color.rgb(251, 221, 101),title = \"\",group =SettingsG ,inline = \"!C2\")\r\n// Symbols\r\nstring s01       = input.symbol('BTCUSDT'  , group = 'Symbols' , title = \"Symbol 1\")\r\nstring s02       = input.symbol('HOOKUSDT' , group = 'Symbols' , title = \"Symbol 2\")\r\nstring s03       = input.symbol('DOGEUSDT' , group = 'Symbols' , title = \"Symbol 3\")\r\nstring s04       = input.symbol('BNBUSDT'  , group = 'Symbols' , title = \"Symbol 4\")\r\nstring s05       = input.symbol('ETHUSDT'  , group = 'Symbols' , title = \"Symbol 5\")\r\nstring s06       = input.symbol('ADAUSDT'  , group = 'Symbols' , title = \"Symbol 6\")\r\nstring s07       = input.symbol('SOLUSDT'  , group = 'Symbols' , title = \"Symbol 7\")\r\nstring s08       = input.symbol('AXSUSDT'  , group = 'Symbols' , title = \"Symbol 8\")\r\nstring s09       = input.symbol('TRXUSDT'  , group = 'Symbols' , title = \"Symbol 9\")\r\nstring s10       = input.symbol('MASKUSDT' , group = 'Symbols' , title = \"Symbol 10\")\r\nstring s11       = input.symbol('SANDUSDT' , group = 'Symbols' , title = \"Symbol 11\")\r\nstring s12       = input.symbol('ATOMUSDT' , group = 'Symbols' , title = \"Symbol 12\")\r\nstring s13       = input.symbol('VETUSDT'  , group = 'Symbols' , title = \"Symbol 13\")\r\nstring s14       = input.symbol('OPUSDT'   , group = 'Symbols' , title = \"Symbol 14\")\r\nstring s15       = input.symbol('LDOUSDT'  , group = 'Symbols' , title = \"Symbol 15\")\r\nstring s16       = input.symbol('EOSUSDT'  , group = 'Symbols' , title = \"Symbol 16\")\r\nstring s17       = input.symbol('XLMUSDT'  , group = 'Symbols' , title = \"Symbol 17\")\r\nstring s18       = input.symbol('LTCUSDT'  , group = 'Symbols' , title = \"Symbol 18\")\r\nstring s19       = input.symbol('AVAXUSDT' , group = 'Symbols' , title = \"Symbol 19\")\r\nstring s20       = input.symbol('STGUSDT'  , group = 'Symbols' , title = \"Symbol 20\")\r\n\r\n// visable range \r\nvar float [] Xbars  = array.new_float()\r\nif ChartTime\r\n    array.push(Xbars,time)\r\n\r\nMid                 = int(array.size(Xbars) / 2 )\r\nEND                 = bar_index[Mid] + 104\r\nStart               = bar_index[Mid] - 100\r\n\r\n// @description -- gets the volume data and create the volume bars along with labels \r\n// @function VolumeData uses request security to fetch data and do some calculation to draw the volume bars\r\n// @param string pair -- symbol \r\n// @param int x1 -- x1 for the bar boxes . \r\n// @returns nothing -- as it gets data and draw it .\r\nmethod VolumeData(string pair,x1)=>\r\n    var box Green   = na, Green.delete()\r\n    var label Name  = na , Name.delete()\r\n    var label Data  = na , Data.delete()\r\n    var box Red     = na, Red.delete()\r\n    var GreenSpace  = 0.0\r\n    var RedSpace    = 0.0\r\n\r\n    _BuyV           = math.round(volume * (close - low) / (high- low))\r\n    _SellV          = math.round(volume * (high- close) / (high- low))\r\n\r\n    [BuyV,SellV,\r\n     Price,Open]    = request.security(pair,TIME,[_BuyV,_SellV,close,open]) \r\n    Delta           =  BuyV + SellV\r\n    BuyMat          =  BuyV  / Delta * 10\r\n    SellMat         =  SellV / Delta * 10\r\n    Spacing         =  (0.8 - 0.5 ) / 10\r\n    GreenSpace      := (Spacing * BuyMat ) + 0.5\r\n    RedSpace        := (Spacing * SellMat ) + 0.5\r\n\r\n\r\n    Green:= box.new(\r\n\r\n                 Start+x1,0.5,Start+2+x1,GreenSpace,\r\n                 text_size      = size.small ,\r\n                 bgcolor        = color.new(C1, 50),\r\n                 border_color   = color.new(C1, 14),\r\n                 text_color     = TC1,\r\n                 text           = str.tostring(BuyV, format.volume),\r\n                 text_valign    = BuyMat > SellMat ? text.align_top : text.align_center\r\n                 \r\n                 )\r\n\r\n    Red:= box.new(\r\n\r\n                 Start+x1+2,0.5,Start+4+x1,RedSpace,\r\n                 text_size      = size.small,\r\n                 bgcolor        = color.new(C2, 50),\r\n                 border_color   = color.new(C2, 14),\r\n                 text_color     = TC2,\r\n                 text           = str.tostring(SellV, format.volume),\r\n                 text_valign    = SellMat > BuyMat ? text.align_top : text.align_center\r\n                 \r\n                 )   \r\n     \r\n    Name:= label.new(\r\n        \r\n                 Start+2+x1,0.45,syminfo.ticker(pair),\r\n                 color      = color.new(color.black,100),\r\n                 textcolor  = color.white,\r\n                 size       = size.small\r\n                 \r\n                 )\r\n    Data:= label.new(\r\n        \r\n                 Start+2+x1,0.42, str.tostring(Price),\r\n                 color      = color.new(color.black,100),\r\n                 textcolor  = Price > Open ? color.lime : color.rgb(208, 25, 123),\r\n                 size       = size.small\r\n                 \r\n                 )\r\n    \r\n\r\nBoxDrawing()=>\r\n    var box Big         = na , Big.delete()\r\n    var box left        = na , left.delete()\r\n    var box TOP         = na , TOP.delete()\r\n    var box right       = na , right.delete()\r\n\r\n    Big:= box.new(\r\n\r\n                     Start,0.88,END,0.5,\r\n                     bgcolor        = color.new(color.gray,100),\r\n                     border_color   = color.new(color.gray,50),\r\n                     border_style   = line.style_dashed\r\n\r\n                     ) \r\n    left:=box.new(\r\n\r\n                     Start-3,0.88,Start,0.5,\r\n                     bgcolor        = color.rgb(89, 24, 209, 50),\r\n                     border_color   = color.new(color.gray,100),\r\n                     border_style   = line.style_dashed\r\n\r\n                     ) \r\n\r\n    TOP:=box.new(\r\n\r\n                     Start-3,0.91,END,0.88,\r\n                     bgcolor        = color.rgb(89, 24, 209, 50),\r\n                     border_color   = color.new(color.gray,100),\r\n                     border_style   = line.style_dashed,\r\n                     text           = \" RealTime Bull/Bear Activity\",\r\n                     text_halign    = text.align_center,\r\n                     text_color     = color.white\r\n\r\n                     )\r\n                                            \r\n    right:=box.new(\r\n\r\n                     END+3,0.91,END,0.5,\r\n                     bgcolor        = color.rgb(89, 24, 209, 50),\r\n                     border_color   = color.new(color.gray,100),\r\n                     border_style   = line.style_dashed,\r\n                     border_width   = 3\r\n\r\n                     ) \r\n\r\nRun()=>\r\n    BoxDrawing()   \r\n    s01.VolumeData(5)   , s02.VolumeData(15) , s03.VolumeData(25)  , s04.VolumeData(35)\r\n    s05.VolumeData(45)  , s06.VolumeData(55) , s07.VolumeData(65)  , s08.VolumeData(75)\r\n    s09.VolumeData(85)  , s10.VolumeData(95) , s11.VolumeData(105) , s12.VolumeData(115)\r\n    s13.VolumeData(125) , s14.VolumeData(135), s15.VolumeData(145) , s16.VolumeData(155)\r\n    s17.VolumeData(165) , s18.VolumeData(175), s19.VolumeData(185) , s20.VolumeData(195)\r\n\r\n\r\n\r\n\r\nif barstate.islast\r\n    Run()\r\n    \r\n    \r\n\r\n\r\n\r\n\r\n","updated":"2024-04-29T19:46:29.83369Z","version":"1.0"}