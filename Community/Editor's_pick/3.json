{"created":"2024-05-23T19:58:28.828436Z","extra":{"kind":"study","sourceInputsCount":0},"lastVersionMaj":"1.0","scriptAccess":"open_no_auth","scriptName":"Sticky Notes, Checklist, To-do, Journal [algoat]","source":"// This Pine Script™ code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/\r\n// © algoat\r\n\r\n//@version=5\r\nindicator(\"Sticky Notes, Checklist, To-do, Journal [algoat]\", \"Sticky Notes [algoat]\", true)\r\n\r\n\r\ntype Block\r\n    bool   is_on      = na\r\n    string title      = na\r\n    bool   is_done    = na\r\n    string comment    = na\r\n    bool   is_date    = na\r\n    int    date       = na\r\n\r\n\r\ni_size   = input.string(size.normal, 'Size', display = display.none, inline = 'c1', options = [size.tiny, size.small, size.normal, size.large, size.huge])\r\ni_pos    = input.string(position.top_right, 'Position', display = display.none, inline = 'c1', options = \r\n [position.top_left   , position.top_center   , position.top_right, \r\n  position.middle_left, position.middle_center, position.middle_right, \r\n  position.bottom_left, position.bottom_center, position.bottom_right])\r\n\r\ncolors = map.new<string,color>()\r\ncolors.put('title'  , input.color(#ffffffd7, 'Color', '', 'clr'))\r\ncolors.put('content', input.color(#ffffff80, '', '', 'clr'))\r\ncolors.put('bg'     , input.color(#ffffff00, '', '', 'clr'))\r\ncolors.put('due'    , input.color(#ff5252  , '', '', 'clr'))\r\n\r\ng1 = 'Note 1'\r\ng2 = 'Note 2'\r\ng3 = 'Note 3'\r\ng4 = 'Note 4'\r\ng5 = 'Note 5'\r\ng6 = 'Note 6'\r\n\r\nnotes = array.from(\r\n Block.new(\r\n input.bool(true, \"\", inline = '1-1', group = g1, display = display.none),\r\n input.string('1st Note', \"\", inline = '1-1', group = g1, display = display.none),\r\n input.bool(true, \"✅ Done\", inline = '1-1', group = g1, display = display.none),\r\n input.text_area(\"This is my first note,\\nand it's already a masterpiece!\\n\\nMultiple lines? No problem.\\n\\nTask completed? Check!\\n\\nFeeling accomplished? Absolutely.\", '', group = g1, display = display.none),\r\n input.bool(false, '', inline = '1-3', group = g1, display = display.none),\r\n input.time(timestamp(\"31 Dec 2024 00:00\"), \"Due\", inline = '1-3', group = g1, display = display.none)\r\n ),\r\n\r\n Block.new(\r\n input.bool(true, \"\", inline = '1-1', group = g2, display = display.none),\r\n input.string('2nd Task', \"\", inline = '1-1', group = g2, display = display.none),\r\n input.bool(false, \"✅ Done\", inline = '1-1', group = g2, display = display.none),\r\n input.text_area(\"This is my second note\\nand it's a serious task.\\nGot a due date and everything.\\n\\nBut hey, plenty of time left...\\nso maybe tomorrow?\\n\\nProcrastinators unite!\", '', group = g2, display = display.none),\r\n input.bool(true, '', inline = '1-3', group = g2, display = display.none),\r\n input.time(timestamp(\"31 Dec 2028 00:00\"), \"Due\", inline = '1-3', group = g2, display = display.none)\r\n ),\r\n\r\n Block.new(\r\n input.bool(true, \"\", inline = '1-1', group = g3, display = display.none),\r\n input.string('Forgot something', \"\", inline = '1-1', group = g3, display = display.none),\r\n input.bool(false, \"✅ Done\", inline = '1-1', group = g3, display = display.none),\r\n input.text_area(\"I forgot something... again.\\nIt was definitely crucial. Or was it?\\nGuess we'll never know!\", '', group = g3, display = display.none),\r\n input.bool(true, '', inline = '1-3', group = g3, display = display.none),\r\n input.time(timestamp(\"31 Jan 2024 00:00\"), \"Due\", inline = '1-3', group = g3, display = display.none)\r\n ),\r\n\r\n Block.new(\r\n input.bool(false, \"\", inline = '1-1', group = g4, display = display.none),\r\n input.string('4th Note', \"\", inline = '1-1', group = g4, display = display.none),\r\n input.bool(false, \"✅ Done\", inline = '1-1', group = g4, display = display.none),\r\n input.text_area('', '', group = g4, display = display.none),\r\n input.bool(false, '', inline = '1-3', group = g4, display = display.none),\r\n input.time(timestamp(\"31 Dec 2024 00:00\"), \"Due\", inline = '1-3', group = g4, display = display.none)\r\n ),\r\n\r\n Block.new(\r\n input.bool(true, \"\", inline = '1-1', group = g5, display = display.none),\r\n input.string('5th Note', \"\", inline = '1-1', group = g5, display = display.none),\r\n input.bool(false, \"✅ Done\", inline = '1-1', group = g5, display = display.none),\r\n input.text_area('Skipped the 4th note because I can!\\nLiving on the edge, one note at a time.', '', group = g5, display = display.none),\r\n input.bool(false, '', inline = '1-3', group = g5, display = display.none),\r\n input.time(timestamp(\"31 Dec 2024 00:00\"), \"Due\", inline = '1-3', group = g5, display = display.none)\r\n ),\r\n\r\n Block.new(\r\n input.bool(true, \"\", inline = '1-1', group = g6, display = display.none),\r\n input.string(\"Let's meeek money!\", \"\", inline = '1-1', group = g6, display = display.none),\r\n input.bool(true, \"✅ Done\", inline = '1-1', group = g6, display = display.none),\r\n input.text_area('Done already?\\nWow, I must be a trading wizard.\\n\\nTime to reward myself...\\nwith a coffee break!', '', group = g6, display = display.none),\r\n input.bool(false, '', inline = '1-3', group = g6, display = display.none),\r\n input.time(timestamp(\"31 Dec 2024 00:00\"), \"Due\", inline = '1-3', group = g6, display = display.none)\r\n )\r\n )\r\n\r\n\r\nsize_title = switch i_size\r\n    size.tiny   => size.small\r\n    size.small  => size.normal\r\n    size.normal => size.large\r\n    size.large  => size.huge\r\n    =>             i_size\r\n\r\nclr_chart = color.new(chart.fg_color, 85)\r\nvar t = table.new(i_pos, 3, 25, colors.get('bg'), clr_chart, 1)\r\n\r\nif barstate.islast\r\n    row = 0\r\n\r\n    t.cell(0, row, 'Notes', text_size = size_title, text_color = colors.get('title'))\r\n    t.merge_cells(0,row,2,row)\r\n\r\n    row += 1\r\n\r\n    t.cell(0, row, '', height = 0.1, bgcolor = clr_chart, text_size = i_size)\r\n    t.merge_cells(0,row,2,row)\r\n\r\n    row += 1\r\n\r\n    for note in notes\r\n\r\n        if not note.is_on\r\n            continue\r\n\r\n        t.cell(0, row, note.is_done ? '✅' : '⬜', text_size = i_size)\r\n        t.cell(1, row, note.title, text_color = colors.get('title'), text_size = size_title, text_halign = text.align_left)\r\n        t.merge_cells(1,row,2,row)\r\n\r\n        row += 1\r\n\r\n        if note.is_date\r\n\r\n            is_due  = timenow >= note.date\r\n            clr     = colors.get(is_due ? 'due' : 'content')\r\n            txt_due = is_due ? 'Overdue!' : str.format('{0} days left', math.floor((note.date - timenow) / 8.64e7))\r\n\r\n            t.cell(1, row, str.format_time(note.date, 'yyyy-MM-dd'), text_color = clr, text_size = i_size, text_halign = text.align_left)\r\n            t.cell(2, row, txt_due, text_color = clr, text_size = i_size, text_halign = text.align_center)\r\n\r\n            row += 1\r\n\r\n        t.cell(0, row, note.comment, text_color = colors.get('content'), text_size = i_size, text_halign = text.align_left)\r\n        t.merge_cells(0,row,2,row)\r\n\r\n        row += 1\r\n\r\n        t.cell(0, row, '', height = 0.1, bgcolor = clr_chart, text_size = i_size)\r\n        t.merge_cells(0,row,2,row)\r\n\r\n        row += 1","updated":"2024-05-23T19:58:28.828436Z","version":"1.0"}